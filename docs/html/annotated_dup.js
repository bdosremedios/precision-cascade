var annotated_dup =
[
    [ "cascade", "namespacecascade.html", [
      [ "heap", "namespacecascade_1_1heap.html", [
        [ "ColValInfo", "structcascade_1_1heap_1_1_col_val_info.html", "structcascade_1_1heap_1_1_col_val_info" ],
        [ "PSizeHeap", "classcascade_1_1heap_1_1_p_size_heap.html", "classcascade_1_1heap_1_1_p_size_heap" ]
      ] ],
      [ "ilu_subrtns", "namespacecascade_1_1ilu__subrtns.html", [
        [ "ILUTriplet", "structcascade_1_1ilu__subrtns_1_1_i_l_u_triplet.html", "structcascade_1_1ilu__subrtns_1_1_i_l_u_triplet" ]
      ] ],
      [ "CheckStagnation", "classcascade_1_1_check_stagnation.html", "classcascade_1_1_check_stagnation" ],
      [ "cuHandleBundle", "classcascade_1_1cu_handle_bundle.html", "classcascade_1_1cu_handle_bundle" ],
      [ "FP_GMRES_IR_Solve", "classcascade_1_1_f_p___g_m_r_e_s___i_r___solve.html", "classcascade_1_1_f_p___g_m_r_e_s___i_r___solve" ],
      [ "GenericIterativeSolve", "classcascade_1_1_generic_iterative_solve.html", "classcascade_1_1_generic_iterative_solve" ],
      [ "GenericLinearSystem", "classcascade_1_1_generic_linear_system.html", "classcascade_1_1_generic_linear_system" ],
      [ "GMRESSolve", "classcascade_1_1_g_m_r_e_s_solve.html", "classcascade_1_1_g_m_r_e_s_solve" ],
      [ "ILUPreconditioner", "classcascade_1_1_i_l_u_preconditioner.html", "classcascade_1_1_i_l_u_preconditioner" ],
      [ "InnerOuterSolve", "classcascade_1_1_inner_outer_solve.html", "classcascade_1_1_inner_outer_solve" ],
      [ "is_same_template", "structcascade_1_1is__same__template.html", null ],
      [ "is_same_template< T, T >", "structcascade_1_1is__same__template_3_01_t_00_01_t_01_4.html", null ],
      [ "IterativeRefinementBase", "classcascade_1_1_iterative_refinement_base.html", "classcascade_1_1_iterative_refinement_base" ],
      [ "JacobiPreconditioner", "classcascade_1_1_jacobi_preconditioner.html", "classcascade_1_1_jacobi_preconditioner" ],
      [ "JacobiSolve", "classcascade_1_1_jacobi_solve.html", "classcascade_1_1_jacobi_solve" ],
      [ "MatrixDense", "classcascade_1_1_matrix_dense.html", "classcascade_1_1_matrix_dense" ],
      [ "MatrixInversePreconditioner", "classcascade_1_1_matrix_inverse_preconditioner.html", "classcascade_1_1_matrix_inverse_preconditioner" ],
      [ "NoFillMatrixSparse", "classcascade_1_1_no_fill_matrix_sparse.html", "classcascade_1_1_no_fill_matrix_sparse" ],
      [ "NoPreconditioner", "classcascade_1_1_no_preconditioner.html", "classcascade_1_1_no_preconditioner" ],
      [ "OuterRestartCount", "classcascade_1_1_outer_restart_count.html", "classcascade_1_1_outer_restart_count" ],
      [ "PrecondArgPkg", "structcascade_1_1_precond_arg_pkg.html", "structcascade_1_1_precond_arg_pkg" ],
      [ "Preconditioner", "classcascade_1_1_preconditioner.html", "classcascade_1_1_preconditioner" ],
      [ "RelativeResidualThreshold", "classcascade_1_1_relative_residual_threshold.html", "classcascade_1_1_relative_residual_threshold" ],
      [ "Scalar", "classcascade_1_1_scalar.html", "classcascade_1_1_scalar" ],
      [ "SCALAR_MINUS_ONE", "classcascade_1_1_s_c_a_l_a_r___m_i_n_u_s___o_n_e.html", "classcascade_1_1_s_c_a_l_a_r___m_i_n_u_s___o_n_e" ],
      [ "SCALAR_ONE", "classcascade_1_1_s_c_a_l_a_r___o_n_e.html", "classcascade_1_1_s_c_a_l_a_r___o_n_e" ],
      [ "SCALAR_ZERO", "classcascade_1_1_s_c_a_l_a_r___z_e_r_o.html", "classcascade_1_1_s_c_a_l_a_r___z_e_r_o" ],
      [ "SD_CheckStagnation", "classcascade_1_1_s_d___check_stagnation.html", "classcascade_1_1_s_d___check_stagnation" ],
      [ "SD_OuterRestartCount", "classcascade_1_1_s_d___outer_restart_count.html", "classcascade_1_1_s_d___outer_restart_count" ],
      [ "SD_RelativeResidualThreshold", "classcascade_1_1_s_d___relative_residual_threshold.html", "classcascade_1_1_s_d___relative_residual_threshold" ],
      [ "SolveArgPkg", "structcascade_1_1_solve_arg_pkg.html", "structcascade_1_1_solve_arg_pkg" ],
      [ "SORSolve", "classcascade_1_1_s_o_r_solve.html", "classcascade_1_1_s_o_r_solve" ],
      [ "StagnationToThreshold", "classcascade_1_1_stagnation_to_threshold.html", "classcascade_1_1_stagnation_to_threshold" ],
      [ "TMatrixIdentity", "structcascade_1_1_t_matrix_identity.html", "structcascade_1_1_t_matrix_identity" ],
      [ "TypedIterativeSolve", "classcascade_1_1_typed_iterative_solve.html", "classcascade_1_1_typed_iterative_solve" ],
      [ "TypedLinearSystem", "classcascade_1_1_typed_linear_system.html", "classcascade_1_1_typed_linear_system" ],
      [ "TypedLinearSystem< TMatrix, double >", "classcascade_1_1_typed_linear_system_3_01_t_matrix_00_01double_01_4.html", "classcascade_1_1_typed_linear_system_3_01_t_matrix_00_01double_01_4" ],
      [ "TypedLinearSystem_Intf", "classcascade_1_1_typed_linear_system___intf.html", "classcascade_1_1_typed_linear_system___intf" ],
      [ "TypedLinearSystem_MutAddlRHS", "classcascade_1_1_typed_linear_system___mut_addl_r_h_s.html", "classcascade_1_1_typed_linear_system___mut_addl_r_h_s" ],
      [ "TypeIdentity", "structcascade_1_1_type_identity.html", "structcascade_1_1_type_identity" ],
      [ "Vector", "classcascade_1_1_vector.html", "classcascade_1_1_vector" ],
      [ "VP_GMRES_IR_Solve", "classcascade_1_1_v_p___g_m_r_e_s___i_r___solve.html", "classcascade_1_1_v_p___g_m_r_e_s___i_r___solve" ]
    ] ],
    [ "utils_experimentation", "namespaceutils__experimentation.html", [
      [ "Convergence_Experiment", "classutils__experimentation_1_1_convergence___experiment.html", "classutils__experimentation_1_1_convergence___experiment" ],
      [ "SolverFormatInfo", "classutils__experimentation_1_1_solver_format_info.html", null ]
    ] ],
    [ "Benchmark_AccumClock", "class_benchmark___accum_clock.html", "class_benchmark___accum_clock" ],
    [ "Benchmark_Dense", "class_benchmark___dense.html", "class_benchmark___dense" ],
    [ "Benchmark_FP_GMRES_IR", "class_benchmark___f_p___g_m_r_e_s___i_r.html", "class_benchmark___f_p___g_m_r_e_s___i_r" ],
    [ "Benchmark_GMRES", "class_benchmark___g_m_r_e_s.html", "class_benchmark___g_m_r_e_s" ],
    [ "Benchmark_ILUPreconditioner", "class_benchmark___i_l_u_preconditioner.html", null ],
    [ "Benchmark_MatrixDense", "class_benchmark___matrix_dense.html", null ],
    [ "Benchmark_Nested_GMRES", "class_benchmark___nested___g_m_r_e_s.html", null ],
    [ "Benchmark_NoFillMatrixSparse", "class_benchmark___no_fill_matrix_sparse.html", null ],
    [ "Benchmark_Precond_FP_GMRES_IR", "class_benchmark___precond___f_p___g_m_r_e_s___i_r.html", null ],
    [ "Benchmark_Precond_VP_GMRES_IR", "class_benchmark___precond___v_p___g_m_r_e_s___i_r.html", null ],
    [ "Benchmark_Sparse", "class_benchmark___sparse.html", "class_benchmark___sparse" ],
    [ "Benchmark_VP_GMRES_IR", "class_benchmark___v_p___g_m_r_e_s___i_r.html", "class_benchmark___v_p___g_m_r_e_s___i_r" ],
    [ "BenchmarkBase", "class_benchmark_base.html", "class_benchmark_base" ],
    [ "CommonMatRandomInterface", "class_common_mat_random_interface.html", null ],
    [ "CommonMatRandomInterface< MatrixDense, TPrecision >", "class_common_mat_random_interface_3_01_matrix_dense_00_01_t_precision_01_4.html", null ],
    [ "CommonMatRandomInterface< NoFillMatrixSparse, TPrecision >", "class_common_mat_random_interface_3_01_no_fill_matrix_sparse_00_01_t_precision_01_4.html", null ],
    [ "Experiment_Clock", "class_experiment___clock.html", "class_experiment___clock" ],
    [ "Experiment_Log", "class_experiment___log.html", "class_experiment___log" ],
    [ "Experiment_Spec", "struct_experiment___spec.html", "struct_experiment___spec" ],
    [ "FP_GMRES_IR_Test", "class_f_p___g_m_r_e_s___i_r___test.html", "class_f_p___g_m_r_e_s___i_r___test" ],
    [ "GaussSeidel_Test", "class_gauss_seidel___test.html", "class_gauss_seidel___test" ],
    [ "GenericLinearSystem_Test", "class_generic_linear_system___test.html", "class_generic_linear_system___test" ],
    [ "GMRESSolve_Component_Test", "class_g_m_r_e_s_solve___component___test.html", "class_g_m_r_e_s_solve___component___test" ],
    [ "GMRESSolve_Solve_DBL_Test", "class_g_m_r_e_s_solve___solve___d_b_l___test.html", "class_g_m_r_e_s_solve___solve___d_b_l___test" ],
    [ "GMRESSolve_Solve_HLF_Test", "class_g_m_r_e_s_solve___solve___h_l_f___test.html", "class_g_m_r_e_s_solve___solve___h_l_f___test" ],
    [ "GMRESSolve_Solve_SGL_Test", "class_g_m_r_e_s_solve___solve___s_g_l___test.html", "class_g_m_r_e_s_solve___solve___s_g_l___test" ],
    [ "GMRESSolveTestingMock", "class_g_m_r_e_s_solve_testing_mock.html", "class_g_m_r_e_s_solve_testing_mock" ],
    [ "ILU0_Test", "class_i_l_u0___test.html", "class_i_l_u0___test" ],
    [ "ILUPreconditioner_Test", "class_i_l_u_preconditioner___test.html", "class_i_l_u_preconditioner___test" ],
    [ "ILUTP_Test", "class_i_l_u_t_p___test.html", "class_i_l_u_t_p___test" ],
    [ "InnerOuterSolve_Mock", "class_inner_outer_solve___mock.html", "class_inner_outer_solve___mock" ],
    [ "InnerSolver_Mock", "class_inner_solver___mock.html", "class_inner_solver___mock" ],
    [ "IterativeRefinementBase_Mock", "class_iterative_refinement_base___mock.html", "class_iterative_refinement_base___mock" ],
    [ "IterativeRefinementBaseSolver_Mock", "class_iterative_refinement_base_solver___mock.html", "class_iterative_refinement_base_solver___mock" ],
    [ "Jacobi_Test", "class_jacobi___test.html", "class_jacobi___test" ],
    [ "JacobiPreconditioner_Test", "class_jacobi_preconditioner___test.html", "class_jacobi_preconditioner___test" ],
    [ "Matrix_Substitution_Test", "class_matrix___substitution___test.html", "class_matrix___substitution___test" ],
    [ "Matrix_Test", "class_matrix___test.html", "class_matrix___test" ],
    [ "MatrixDense_Substitution_Test", "class_matrix_dense___substitution___test.html", null ],
    [ "MatrixDense_Test", "class_matrix_dense___test.html", "class_matrix_dense___test" ],
    [ "MatrixInversePreconditioner_Test", "class_matrix_inverse_preconditioner___test.html", "class_matrix_inverse_preconditioner___test" ],
    [ "NoFillMatrixSparse_Substitution_Test", "class_no_fill_matrix_sparse___substitution___test.html", "class_no_fill_matrix_sparse___substitution___test" ],
    [ "NoFillMatrixSparse_Test", "class_no_fill_matrix_sparse___test.html", "class_no_fill_matrix_sparse___test" ],
    [ "NoPreconditioner_Test", "class_no_preconditioner___test.html", "class_no_preconditioner___test" ],
    [ "NoProgress_FP_GMRES_IR", "class_no_progress___f_p___g_m_r_e_s___i_r.html", "class_no_progress___f_p___g_m_r_e_s___i_r" ],
    [ "NoProgress_OuterRestartCount", "class_no_progress___outer_restart_count.html", "class_no_progress___outer_restart_count" ],
    [ "NoProgressGMRESSolve", "class_no_progress_g_m_r_e_s_solve.html", "class_no_progress_g_m_r_e_s_solve" ],
    [ "PGMRES_Solve_Test", "class_p_g_m_r_e_s___solve___test.html", "class_p_g_m_r_e_s___solve___test" ],
    [ "PrecondArgPkg_Test", "class_precond_arg_pkg___test.html", "class_precond_arg_pkg___test" ],
    [ "Preconditioned_FP_GMRES_IR_Test", "class_preconditioned___f_p___g_m_r_e_s___i_r___test.html", "class_preconditioned___f_p___g_m_r_e_s___i_r___test" ],
    [ "Preconditioned_VP_GMRES_IR_Test", "class_preconditioned___v_p___g_m_r_e_s___i_r___test.html", "class_preconditioned___v_p___g_m_r_e_s___i_r___test" ],
    [ "Preconditioner_Data", "struct_preconditioner___data.html", "struct_preconditioner___data" ],
    [ "Preconditioner_Spec", "struct_preconditioner___spec.html", "struct_preconditioner___spec" ],
    [ "PSizeHeap_Test", "class_p_size_heap___test.html", "class_p_size_heap___test" ],
    [ "read_matrixCSV_Double_Test", "classread__matrix_c_s_v___double___test.html", null ],
    [ "read_matrixCSV_General_Test", "classread__matrix_c_s_v___general___test.html", "classread__matrix_c_s_v___general___test" ],
    [ "read_matrixCSV_Half_Test", "classread__matrix_c_s_v___half___test.html", null ],
    [ "read_matrixCSV_Single_Test", "classread__matrix_c_s_v___single___test.html", null ],
    [ "read_matrixCSV_TPrecision_Test", "classread__matrix_c_s_v___t_precision___test.html", "classread__matrix_c_s_v___t_precision___test" ],
    [ "read_matrixMTX_Test", "classread__matrix_m_t_x___test.html", "classread__matrix_m_t_x___test" ],
    [ "read_vectorCSV_Test", "classread__vector_c_s_v___test.html", "classread__vector_c_s_v___test" ],
    [ "read_vectorMTX_Test", "classread__vector_m_t_x___test.html", "classread__vector_m_t_x___test" ],
    [ "Scalar_Test", "class_scalar___test.html", "class_scalar___test" ],
    [ "Solve_Data", "struct_solve___data.html", "struct_solve___data" ],
    [ "Solve_Group", "struct_solve___group.html", "struct_solve___group" ],
    [ "SolveArgPkg_Test", "class_solve_arg_pkg___test.html", null ],
    [ "SOR_Test", "class_s_o_r___test.html", "class_s_o_r___test" ],
    [ "Sort_Test", "class_sort___test.html", "class_sort___test" ],
    [ "Test_Experiment_Base", "class_test___experiment___base.html", null ],
    [ "Test_Experiment_Data", "class_test___experiment___data.html", "class_test___experiment___data" ],
    [ "Test_Experiment_Read", "class_test___experiment___read.html", null ],
    [ "Test_Experiment_Run", "class_test___experiment___run.html", "class_test___experiment___run" ],
    [ "Test_Experiment_Spec", "class_test___experiment___spec.html", "class_test___experiment___spec" ],
    [ "Test_Experiment_Tools", "class_test___experiment___tools.html", "class_test___experiment___tools" ],
    [ "Test_InnerOuterSolve", "class_test___inner_outer_solve.html", "class_test___inner_outer_solve" ],
    [ "Test_IterativeRefinementBase", "class_test___iterative_refinement_base.html", "class_test___iterative_refinement_base" ],
    [ "TestBase", "class_test_base.html", "class_test_base" ],
    [ "Timed_Experiment_Data", "struct_timed___experiment___data.html", "struct_timed___experiment___data" ],
    [ "Tol", "class_tol.html", "class_tol" ],
    [ "TypeConversion_Test", "class_type_conversion___test.html", "class_type_conversion___test" ],
    [ "TypedIterativeSolve_Test", "class_typed_iterative_solve___test.html", "class_typed_iterative_solve___test" ],
    [ "TypedIterativeSolveTestingMock", "class_typed_iterative_solve_testing_mock.html", "class_typed_iterative_solve_testing_mock" ],
    [ "TypedLinearSystem_Test", "class_typed_linear_system___test.html", "class_typed_linear_system___test" ],
    [ "Vector_Test", "class_vector___test.html", "class_vector___test" ],
    [ "VP_GMRES_IR_Component_Test", "class_v_p___g_m_r_e_s___i_r___component___test.html", "class_v_p___g_m_r_e_s___i_r___component___test" ],
    [ "VP_GMRES_IR_Solve_Test", "class_v_p___g_m_r_e_s___i_r___solve___test.html", "class_v_p___g_m_r_e_s___i_r___solve___test" ],
    [ "VP_GMRES_IR_Solve_TestingMock", "class_v_p___g_m_r_e_s___i_r___solve___testing_mock.html", "class_v_p___g_m_r_e_s___i_r___solve___testing_mock" ]
];